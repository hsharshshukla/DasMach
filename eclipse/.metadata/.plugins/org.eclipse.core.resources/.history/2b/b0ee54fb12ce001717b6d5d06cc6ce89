import javax.xml.parsers.*;
import javax.xml.transform.*;
import java.io.*;
import java.text.*;
import java.util.*;
import org.w3c.dom.*;

public class DomParser {
	public static void main(String args[]){
//Get the Dom Builder Factory
	DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
	DocumentBuilder builder = null;
//Get the Dom Builder 
	try { builder = factory.newDocumentBuilder();
	}
	catch (ParserConfigurationException e)
	{e.printStackTrace();}
	
	
//Load and Parse the XML Document
	try{Document document = builder.parse(ClassLoader.getSystemResourceAsStream("/development/test.xml"));}
	catch(Exception e){
		e.printStackTrace();
	}
	
	List<Employee> empList = new ArrayList<>();
	
//Iterating through the nodes and extracting the data.
	NodeList nodeList = document.getDocumentElement().getChildNodes();
	for (int i= 0;i < nodeList.getLength();i++){
		//We have encountered a Employee tag	
		Node node = nodeList.item(i);
		if(node instanceof Element){
			Employee emp = new employee();
			emp.id = node.getAttributes().getNamedItem("id").getNodeValue();
			
		NodeList childNodes = node.getChildNodes();
		for (int j = 0;j < childNodes.getLength();j++){
			Node cNode = childNodes.item(j);
			
		//Identifying the child tag of employee encountered.
	if(){}
		}
		}
	}
	}
}
